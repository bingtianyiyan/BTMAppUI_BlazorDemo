@using BTMAppUI.Data.Authentication
@inherits LayoutComponentBase
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager
<PageTitle>BTMAppUI</PageTitle>

<div class="page">
	<main>

		<header class="site-header sticky-top py-1 bg-dark">
			<div class="container">
				<header class="py-3 bg-dark">
					<div class="row flex-nowrap justify-content-between align-items-center">
						<div class="col-4 text-center">
							<nav class="nav mx-auto fw-bold text-white">
								<a class="p-2 link-light text-white text-decoration-none" href="/Products/Products">Home</a>
								<AuthorizeView Roles="Administrator">
									<Authorized>
										<a class="p-2 link-light text-white text-decoration-none" href="/Admin/AddAndModifyProduct">Manage Products</a>
										<a class="p-2 link-light text-white text-decoration-none" href="/Reports/Reports">Reports</a>
									</Authorized>
								</AuthorizeView>
							</nav>
						</div>
						<div class="col-4 d-flex justify-content-end align-items-center">
							<AuthorizeView>
								<Authorized>
									<span class="text-white">Hello, <b>@context.User.Identity.Name</b>!</span>
									<a class="p-2 link-light text-white text-decoration-none" @onclick="Logout" href="javascript:void(0)">Logout</a>
								</Authorized>
								<NotAuthorized>
									<a class="btn btn-sm btn-outline-secondary me-1 text-white" href="/Registration/Registration">Register</a>
									<a class="btn btn-sm btn-outline-secondary text-white" href="/Login/Login">Log in</a>
								</NotAuthorized>
							</AuthorizeView>
							<a class="p-2 link-light text-white text-decoration-none" href=""><i class="fas fa-shopping-cart"></i>Cart</a>
						</div>
					</div>
				</header>
			</div>
		</header>
		<article class="content px-4">
			@Body
		</article>
	</main>
</div>
@code {
	private async Task Logout()
	{
		var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
		await customAuthStateProvider.UpdateAuthenticationState(null);
		navManager.NavigateTo("/", true);
	}
}